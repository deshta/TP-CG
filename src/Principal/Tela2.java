/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Principal;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.GridLayout;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;
import javax.swing.JColorChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;

/**
 *
 * @author guimn
 */
public class Tela2 extends javax.swing.JFrame implements MouseListener, MouseMotionListener {

    Color corSelecionada = Color.BLACK;
    int clickCounter = 0;
    int aux = 0;
    boolean isReta = false;
    boolean isCircun = false;
    boolean chkAliasing = false;
    ArrayList<Reta> pilhaR = new ArrayList<Reta>();
    ArrayList<Circun> pilhaC = new ArrayList<Circun>();
    int x2, y2, x1, y1;
    Ponto pR1 = new Ponto();
    Ponto pR2 = new Ponto();

    /**
     * Creates new form Tela2
     */
    public Tela2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        area = new javax.swing.JPanel();
        barraMenu = new javax.swing.JMenuBar();
        arquivo = new javax.swing.JMenu();
        sair = new javax.swing.JMenuItem();
        editar = new javax.swing.JMenu();
        aliasing = new javax.swing.JCheckBoxMenuItem();
        cor = new javax.swing.JMenuItem();
        limpar = new javax.swing.JMenuItem();
        desfazer = new javax.swing.JMenuItem();
        rotacionar = new javax.swing.JMenuItem();
        reta = new javax.swing.JMenu();
        desenharR = new javax.swing.JMenuItem();
        circun = new javax.swing.JMenu();
        desenharC = new javax.swing.JMenuItem();
        ajuda = new javax.swing.JMenu();
        sobre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bresenham");
        setBackground(new java.awt.Color(255, 255, 255));

        area.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout areaLayout = new javax.swing.GroupLayout(area);
        area.setLayout(areaLayout);
        areaLayout.setHorizontalGroup(
            areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
        );
        areaLayout.setVerticalGroup(
            areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 690, Short.MAX_VALUE)
        );

        barraMenu.setPreferredSize(new java.awt.Dimension(245, 30));

        arquivo.setText("Arquivo");

        sair.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        sair.setText("Sair");
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });
        arquivo.add(sair);

        barraMenu.add(arquivo);

        editar.setText("Editar");

        aliasing.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        aliasing.setText("Aliasing");
        aliasing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aliasingActionPerformed(evt);
            }
        });
        editar.add(aliasing);

        cor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        cor.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cor.setText("Cor");
        cor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                corActionPerformed(evt);
            }
        });
        editar.add(cor);

        limpar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        limpar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        limpar.setText("Limpar");
        limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparActionPerformed(evt);
            }
        });
        editar.add(limpar);

        desfazer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        desfazer.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        desfazer.setText("Desfazer");
        desfazer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desfazerActionPerformed(evt);
            }
        });
        editar.add(desfazer);

        rotacionar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        rotacionar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        rotacionar.setText("Rotacionar");
        rotacionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rotacionarActionPerformed(evt);
            }
        });
        editar.add(rotacionar);

        barraMenu.add(editar);

        reta.setText("Reta");

        desenharR.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        desenharR.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        desenharR.setText("Desenhar");
        desenharR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desenharRActionPerformed(evt);
            }
        });
        reta.add(desenharR);

        barraMenu.add(reta);

        circun.setText("Circunferência");

        desenharC.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        desenharC.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        desenharC.setText("Desenhar");
        desenharC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desenharCActionPerformed(evt);
            }
        });
        circun.add(desenharC);

        barraMenu.add(circun);

        ajuda.setText("Ajuda");

        sobre.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        sobre.setText("Sobre");
        sobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sobreActionPerformed(evt);
            }
        });
        ajuda.add(sobre);

        barraMenu.add(ajuda);

        setJMenuBar(barraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(area, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(area, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void drawReta(Ponto p1, Ponto p2) {
        Reta r;

        r = new Reta(p1, p2, corSelecionada, false);
        pilhaR.add(r);
        r.draw(area.getGraphics());
    }

    public void drawRetaAli(Ponto p1, Ponto p2) {
        Reta r;

        r = new Reta(p1, p2, corSelecionada, true);
        pilhaR.add(r);
        r.drawAli(area.getGraphics());
    }


    private void desenharRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desenharRActionPerformed
        isReta = true;
        isCircun = false;
    }//GEN-LAST:event_desenharRActionPerformed

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
        dispose();
    }//GEN-LAST:event_sairActionPerformed

    private void sobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sobreActionPerformed
        JOptionPane.showMessageDialog(null, "Trabalho Prático de Computação Gráfica - PUC Minas\n\n"
                + "Professora: Rosilane Ribeiro da Mota\n\n"
                + "Programadores:\n"
                + "Guilherme Moreira Nunes\n"
                + "Guilherme José Lana\n"
                + "Rafael Oliveira Mendes Lima");
    }//GEN-LAST:event_sobreActionPerformed

    private void corActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_corActionPerformed
        corSelecionada = JColorChooser.showDialog(this, "Escolhar uma cor", corSelecionada);
    }//GEN-LAST:event_corActionPerformed

    public void drawCircun(Ponto pc, int r) {
        Circun c;

        c = new Circun(r, pc, corSelecionada, chkAliasing);
        pilhaC.add(c);
        c.draw(area.getGraphics());
    }

    public void drawCircunAli(Ponto pc, int r) {
        //implementar o aliasing
    }


    private void desenharCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desenharCActionPerformed
        isReta = false;
        isCircun = true;
    }//GEN-LAST:event_desenharCActionPerformed

    private void limparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparActionPerformed
        area.removeAll();
        area.revalidate();
        area.repaint();
        pilhaR.clear();
        pilhaC.clear();
    }//GEN-LAST:event_limparActionPerformed

    private void desfazerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desfazerActionPerformed
        Graphics g = area.getGraphics();
        g.clearRect(0, 0, 1280, 690);
        Reta r;
        if (!pilhaR.isEmpty()) {
            for (int i = 0; i < pilhaR.size(); i++) {
                pilhaR.get(i).draw(area.getGraphics());
            }
        }

        Circun c;
        if (!pilhaC.isEmpty()) {
            for (int i = 0; i < pilhaC.size(); i++) {
                pilhaC.get(i).draw(area.getGraphics());
            }
        }
    }//GEN-LAST:event_desfazerActionPerformed

    private void aliasingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aliasingActionPerformed
        if (aliasing.isSelected()) {
            chkAliasing = true;
        } else {
            chkAliasing = false;
        }
    }//GEN-LAST:event_aliasingActionPerformed


    private void rotacionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotacionarActionPerformed
        if (!pilhaR.isEmpty()) {
            JPanel p = new JPanel(new BorderLayout(5, 5));
            JPanel labels = new JPanel(new GridLayout(0, 1, 2, 2));
            labels.add(new JLabel("Grau:", SwingConstants.RIGHT));
            p.add(labels, BorderLayout.WEST);

            JPanel controls = new JPanel(new GridLayout(0, 1, 2, 2));
            JTextField grau = new JTextField();
            controls.add(grau);
            p.add(controls, BorderLayout.CENTER);

            JOptionPane.showMessageDialog(area, p, "Digite o grau", JOptionPane.QUESTION_MESSAGE);
            int aux = Integer.parseInt(grau.getText());
            Graphics g = area.getGraphics();
            g.clearRect(0, 0, 1280, 690);
            for (int i = 0; i < pilhaR.size(); i++) {
                Reta r = pilhaR.get(i);
                if (r.aliasing) {
                    r.rotacionar(g, aux);
                } else {
                    r.rotacionar(g, aux);
                }
            }
        }
    }//GEN-LAST:event_rotacionarActionPerformed

    public void start() {
        addMouseListener(this);
        add(area);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu ajuda;
    private javax.swing.JCheckBoxMenuItem aliasing;
    private javax.swing.JPanel area;
    private javax.swing.JMenu arquivo;
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JMenu circun;
    private javax.swing.JMenuItem cor;
    private javax.swing.JMenuItem desenharC;
    private javax.swing.JMenuItem desenharR;
    private javax.swing.JMenuItem desfazer;
    private javax.swing.JMenu editar;
    private javax.swing.JMenuItem limpar;
    private javax.swing.JMenu reta;
    private javax.swing.JMenuItem rotacionar;
    private javax.swing.JMenuItem sair;
    private javax.swing.JMenuItem sobre;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mousePressed(MouseEvent e) {
        clickCounter++;
        if (clickCounter == 1) {
            x1 = e.getX() - 9;
            y1 = e.getY() - 60;
        }

        if (clickCounter == 2) {
            x2 = e.getX() - 9;
            y2 = e.getY() - 60;
            clickCounter = 0;
        }

        if (isCircun && clickCounter == 0) {
            Ponto pc = new Ponto(x1, y1);
            int r = (int) Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
            if (chkAliasing) {
                drawCircunAli(pc, r);
            } else {
                drawCircun(pc, r);
            }
        } else if (isReta && clickCounter == 0) {
            Ponto p1 = new Ponto(x1, y1);
            Ponto p2 = new Ponto(x2, y2);
            Reta r;
            if (chkAliasing) {
                drawRetaAli(p1, p2);
            } else {
                drawReta(p1, p2);
            }
        }
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseExited(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseDragged(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseMoved(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
